<?python # -*- html -*-
    import re, os, time, string, stat, sys
    from raw2event import attrib

    path  = os.path.realpath(".")
    tool  = os.path.basename(path)
    Tool  = string.capitalize(tool)

    # Handle possible uploaded files.

    uploadmsg = ""
    filename1 = None
    filename2 = None
    linecount1 = 0
    linecount2 = 0
    uploadsrc1 = ""
    uploadsrc2 = ""
    uploadfile = None
    info = ""
    debuginfo = ""

    if "filename2" in args or "url2" in args:
	if "filename2" in args and len(args["filename2"]) > 0:
	    uploadsrc2 = form["filename2"].filename
	elif "url2" in args and type(args["url2"]) is str and len(args["url2"]) > 0:
	    uploadsrc2 = args["url2"]
	    if uploadsrc2.startswith("draft-"):
		rev_match = re.search("(.*-)([0-9][0-9])(.txt)?$", uploadsrc2)
		if not rev_match:
		    name_match = re.search("^(.*?)(.txt)?$", uploadsrc2)
		    if name_match:
			draft = name_match.group(1)
			try:
			    attrs = attrib.readline("/www/tools.ietf.org/draft/%s/now" % draft)
			    uploadsrc2 = "%s-%s" % (draft, attrs.docrev.string)
			except:
			    pass
	        uploadsrc2 = "http://tools.ietf.org/id/"+uploadsrc2;
		if not uploadsrc2.endswith(".txt"):
		    uploadsrc2 += ".txt"
	    else:
		match = re.search("^[rR][fF][cC] ?([0-9]+)", uploadsrc2)
		if match:
		    uploadsrc2 = "http://tools.ietf.org/rfc/rfc"+match.group(1)+".txt"
	else:
	    uploadmsg = "Upload failed - no source file name for file 2."

    if "filename1" in args or "url1" in args or uploadsrc2:
	if "filename1" in args and len(args["filename1"]) > 0:
	    uploadsrc1 = form["filename1"].filename
	elif "url1" in args and type(args["url1"]) is str and len(args["url1"]) > 0:
	    uploadsrc1 = args["url1"]
	    if uploadsrc1.startswith("draft-"):
	        uploadsrc1 = "http://tools.ietf.org/id/"+uploadsrc1;
		if not uploadsrc1.endswith(".txt"):
		    uploadsrc1 += ".txt"
	        if not uploadsrc2:
		    match = re.match("(.*-)([0-9][0-9])(\..*)", uploadsrc1)
		    if match:
			rev = int(match.group(2))
			uploadsrc2= "%s%02d%s" % (match.group(1), rev+1, match.group(3))
			uploadmsg = ""
	    else:
		match = re.search("^[rR][fF][cC] ?([0-9]+)", uploadsrc1)
		if match:
		    uploadsrc1 = "http://tools.ietf.org/rfc/rfc"+match.group(1)+".txt"
	elif uploadsrc2:
	    try:
		match = re.match("(.*-)([0-9][0-9])(\..*)", uploadsrc2)
		if match:
		    rev = int(match.group(2))
		    if rev > 0:
			uploadsrc1= "%s%02d%s" % (match.group(1), rev-1, match.group(3))
		    elif rev == 0:
			match = re.match(".*-(rfc)?([0-9][0-9][0-9]+)bis-.*", uploadsrc2)
			if match:
			    rfcnum = match.group(2)
			    uploadsrc1 = "http://tools.ietf.org/rfc/rfc%s.txt" % rfcnum
			else:
			    # Check if this document is a draft which
			    # replaces another...
			    match = re.match(".*/(draft-[^.]*)(\.txt)?", uploadsrc2)
			    if match:
				draft = match.group(1)
				if re.search("-[0-9][0-9]$", draft):
				    draft = draft[:-3]
				try:
				    attrs = attrib.readline("/www/tools.ietf.org/draft/%s/now" % draft)
				    if "docreplaces" in attrs.__dict__:
					uploadsrc1= "http://tools.ietf.org/id/%s" % attrs.docreplaces
				except Exception, e:
				    info = str(e)
				    pass

		match = re.match(".*/([Rr][Ff][Cc])([0-9]+)(\..*)", uploadsrc2)
		if match:
		    num = int(match.group(2))
		    if num > 0:
			try:
			    attrs = attrib.readline("/www/tools.ietf.org/draft/rfc%s/now" % num)
			    if "document" in attrs.__dict__:
				uploadsrc1= "http://tools.ietf.org/id/%s" % attrs.document
			except Exception, e:
			    info = str(e)
			    pass
		
	    except Exception, e:
		info = str(e)
		pass

	if uploadsrc1:
	    uploadname = basename(re.sub("\\\\","/", uploadsrc1))
	    if re.match("^[a-zA-Z0-9_.,-]*$", uploadname):
		if uploadsrc1.startswith("http://") or uploadsrc1.startswith("ftp://") or uploadsrc1.startswith("https://"):
		    try:
			import httplib
			import urllib2 as urllib
			uploadfile = urllib.urlopen(uploadsrc1)
		    except:
			uploadmsg = "Couldn't retrieve file 1 (%s) - please check the URL." % uploadsrc1
		    if uploadfile and re.search("-[0-9][0-9](\.txt)?$", uploadsrc1) and uploadsrc1 != uploadfile.geturl():
			uploadmsg = "Couldn't retrieve file 1 (%s) - got a redirect to '%s' instead." % (uploadsrc1, uploadfile.geturl())
			uploadfile = None
		elif "filename1" in args and form["filename1"].file:
		    uploadfile = form["filename1"].file
		else:
		    uploadmsg = "Couldn't retrieve file 1 (%s) - unknown URL format." % uploadsrc1
		if uploadname and uploadfile:
		    if not hasattr(uploadfile, "info") or uploadfile.info()["content-type"].startswith("text/plain"):
			uploadname = os.path.join("tmp/1", uploadname)
			outputfile = open(uploadname, "w")
			while linecount1 < 32000: # arbitrary number of lines
			    line = uploadfile.readline()
			    if not line: break
			    # try to handle files with mac line endings well:
			    for l in line.rstrip("\n\r").split("\r"):
				outputfile.write(l.rstrip("\n\r"))
				outputfile.write("\n")
				linecount1 += 1
			outputfile.close()
			os.chmod(uploadname, 0666)
			filename1 = uploadname
			if not linecount1:
			    uploadmsg = "File 1 seems to be empty"
		    else:
			uploadmsg = "The mime-type of file 1 is '%s', but 'text/plain' was expected" % uploadfile.info()["content-type"]
	    else:
		uploadmsg = "Upload aborted, got (%s) but a text file without odd characters in the name is expected here." % uploadname
	else:
	    uploadmsg = "Upload failed - no source file name for file 1"

	if uploadsrc2:
	    uploadname = basename(re.sub("\\\\","/", uploadsrc2))
	    if re.match("^[a-zA-Z0-9_.,-]*$", uploadname):
		if uploadsrc2.startswith("http://") or uploadsrc2.startswith("ftp://") or uploadsrc2.startswith("https://"):
		    try:
			import httplib
			import urllib2 as urllib
			uploadfile = urllib.urlopen(uploadsrc2)
		    except:
			uploadmsg = "Couldn't retrieve file 2 (%s) - please check the URL." % uploadsrc2
		    if uploadfile and re.search("-[0-9][0-9](\.txt)?$", uploadsrc2) and uploadsrc2 != uploadfile.geturl():
			uploadmsg = "Couldn't retrieve file 2 (%s) - got a redirect to '%s'." % (uploadsrc2, uploadfile.geturl())
			uploadfile = None
			if uploadsrc2.startswith("http://tools.ietf.org/id/draft-"):
			    # Try to get the document from the master site, instead:
			    uploadsrc2b = uploadsrc2.replace("http://tools.ietf.org/id/", "http://www.ietf.org/internet-drafts/")
			    try:
				uploadfile = urllib.urlopen(uploadsrc2b)
			    except:
				pass
			    
		elif "filename2" in args and form["filename2"].file:
		    uploadfile = form["filename2"].file
		else:
		    uploadmsg = "Couldn't retrieve file 2 (%s) - unknown URL format." % uploadsrc2
		    
		if uploadname and uploadfile:
		    if not hasattr(uploadfile, "info") or uploadfile.info()["content-type"].startswith("text/plain"):
			uploadname = os.path.join("tmp/2", uploadname)
			outputfile = open(uploadname, "w")
			while linecount2 < 32000:
			    line = uploadfile.readline()
			    if not line: break
			    # try to handle files with mac line endings well:
			    for l in line.rstrip("\n\r").split("\r"):
				outputfile.write(l.rstrip("\n\r"))
				outputfile.write("\n")
				linecount2 += 1
			outputfile.close()
			if not linecount2:
			    uploadmsg = "File 2 seems to be empty..."
			os.chmod(uploadname, 0666)
			filename2 = uploadname
		    else:
			uploadmsg = "The mime-type of file 2 is '%s', but 'text/plain' was expected" % uploadfile.info()["content-type"]
	    else:
		uploadmsg = "Upload aborted, got (%s) but a text file without odd characters in the name is expected here." % uploadname

    # argument cleaning
    if "--width" in args and args["--width"].isdigit():
        width = "--width "+args["--width"]
    else:
	width=""

    colours = [ "aqua", "black", "blue", "fuchsia", "gray", "green", "lime", "maroon", "navy", "olive", "orange", "purple", "red", "silver", "teal", "white", "yellow"]
    if "--oldcolour" in args and args["--oldcolour"] in colours:
	oldcolour = "--oldcolour "+args["--oldcolour"]
    else:
	oldcolour = ""

    if "--newcolour" in args and args["--newcolour"] in colours:
	newcolour = "--newcolour "+args["--newcolour"]
    else:
	newcolour = ""

    difftypes = ["html", "chbars", "diff", "wdiff", "hwdiff", "abdiff" ]
    difftype = ""
    if "difftype" in args:
        if type(args["difftype"]) == type([]):
            args["difftype"] = args["difftype"][0]
        if args["difftype"].lstrip('-') in difftypes:
            difftype = args["difftype"]

    if "--larger" in args:
	larger = "--larger"
    else:
	larger = ""

    if debuginfo:
        out("\n\n<script type='text/javascript' language='JavaScript1.1'>alert(\"%s\");</script>" % (debuginfo.replace('"','\\"')))
    if filename1 and filename2 and linecount1 and linecount2:
	uploadmsg = "Upload complete."
	if difftype in ("--abdiff", "--chbars"):
	    print("Content-Type: text/plain\n\n")
	else:
	    print("Content-Type: text/html\n\n")
	os.system("./rfcdiff --ignore-whitespace --stdout --links %s %s %s %s %s %s %s" % (width, difftype, oldcolour, newcolour, larger, filename1, filename2))
        out("<!-- args: %s -->" % repr(args))

	#os.unlink(uploadname)
	sys.exit(0)

?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<head>
  <title><?python tool ?></title>
  <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
  <meta http-equiv="Content-Style-Type" content="text/css" />
  <link rel="stylesheet" href="/css/wg-page.css" type="text/css" />
  <script language="javascript1.1" src="/js/hide.js" type="text/javascript"></script>
  <script language="javascript1.1" src="/js/updated.js" type="text/javascript"></script>
  <?python 
      tryinclude("../autocomplete/autocomplete_header.html")
  ?>
</head>
<body >
<div class="page">
   <table border="0" width="100%" >
      <tr>
	 <!-- Left column -->
	 <?python
	   virtualinc("/inc/narrow-menu.pyht")
	 ?>
	 <!--#include virtual="/inc/narrow-menu.html" -->
	 <!-- Right column -->
	 <td valign="top">
	    <div class="content">

	       <div>
		  <!-- Caption -->
		  <table width="100%">
		     <tr>
			<td rowspan="2">
			   <h2 align="left">Rfcdiff Tool</h2>
			   <i></i>
			</td>

			<td class="version" style="color: black; font-size:11pt;">
			</td>
		     </tr>
		     <tr>
			<!-- left column inherited from previous row -->
			<td class="chairs">
			   <i>Version:</i> 0.11
			   <br />

			   <i>Author:</i>
			   <script type="text/javascript"> showEmail("henrik", "levkowetz.com", "Henrik Levkowetz "); </script>

			</td>
		     </tr>
		  </table>
		  <b>
		     <!--
		     <a href="webservice">Idspell Webservice</a> | 
		     <a href="changelog">Change log</a> |
		     <a href="code">Browse code</a> | 
		     <script type="text/javascript"> showEmail("tools-discuss", "ietf.org?subject=Idspell-0.11%20feedback", "Feedback"); </script> |
		     <a href="copyright">Copyright</a>
		     -->
		  </b>
	       </div>
	       <hr/>


	       <h3>Rfcdiff Web Service</h3>
	       <form action="" method="post" enctype="multipart/form-data">
		  <table border="0" cellpadding="8" cellspacing="0" >
		     <tbody>
			<tr valign="top">
			   <td>File 1 - &nbsp;</td>
			   <td>Upload file: &nbsp; </td>
			   <td><input name="filename1" type="file" size="40"></td>
			</tr>
			<tr>
			   <td />
			   <td>or enter URL or draft name:  &nbsp; </td>
			   <td><input name="url1" id="url1" type="text" size="50"></td>
			</tr>
			<tr><td colspan="3">&nbsp;</td></tr>
			<tr valign="top">
			   <td>File 2 - &nbsp;</td>
			   <td>Upload file: &nbsp; </td>
			   <td><input name="filename2" type="file" size="40"></td>
			</tr>
			<tr>
			   <td />
			   <td>or enter URL or draft name:  &nbsp; </td>
			   <td><input name="url2" id="url2" type="text" size="50"></td>
			</tr>
			<tr><td colspan="3">&nbsp;</td></tr>
			<tr valign="top">
			   <td colspan="2">Output format:</td>
			   <td>
			      <input name="difftype" value="--html" checked="checked" type="radio">Side-by-side diff<br>
			      <input name="difftype" value="--abdiff" type="radio">Before-after diff<br>
			      <input name="difftype" value="--chbars" type="radio">Changebars<br>
			      
			      <input name="difftype" value="--hwdiff" type="radio">Html wdiff<br>
			      <table>
				<tr valign="top"><td width="16"></td><td colspan="2">Html Wdiff Options:</td><tr>
				<tr><td/><td>Colour of old text: </td><td><input name="--oldcolour" value="red" type="text"></td></tr>
				<tr><td/><td>Colour of new text: </td><td><input name="--newcolour" value="green" type="text">	   </td></tr>
				<tr><td/><td>Larger diff text:   </td><td><input name="--larger" type="checkbox">	   </td></tr>
			      </table>
			   </td>
			</tr>
			<tr valign="top">
			   <td colspan="2">Column width:</td>
			   <td><input name="--width" size="4" type="text"></td>
			</tr>

			<tr>
			   <td colspan="3" align="right">
			      <input name="submit" value="Generate diff" type="submit">
			   </td>
			</tr>
		     </tbody></table>

	       </form>

	       <div style="margin: 2em;">
		  <p>
		     You can also use this web-service with an URL query-string of the form:
		  </p>
		  <p>
		     <tt><small><?python urlpath+"/"+basename(urlname) ?>?url1=<i>http-url-to-doc-1</i>&amp;url2=<i>http-url-to-doc-2</i></small></tt>
		  </p>
		  <p>
		     which makes it possible to send around links to diffs between document
		     versions withouth actually generating the diff yourself, as long as the two
		     document versions are available by http.
		  </p>
		  <p>
		     Example (yes, it is long - no way to get around that... - but you could use <a href="http://tinyurl.com/">tinyurl.com</a> to get a short alias to one of these):
		  </p>
		  <p>

		     <a href="<?python 'http://'+servername+urlname ?>?url1=http://tools.ietf.org/id/draft-ietf-atompub-format-10.txt&url2=http://tools.ietf.org/id/draft-ietf-atompub-format-11.txt"><?python "http://"+servername+urlname ?>?<br/>
			&nbsp;&nbsp;url1=http://tools.ietf.org/id/draft-ietf-atompub-format-10.txt<br/>
			&nbsp;&nbsp;&amp;url2=http://tools.ietf.org/id/draft-ietf-atompub-format-11.txt</a>

		  </p>
	       </div>
	    </div>
	    <br/>
	    <br/>
	    <br/>
	 </td>
      </tr>
   </table>


  <table width="100%" style="margin-top: 10em;">
    <tr valign="bottom">
      <td style=" font-size: 9pt; font-style: italic; text-align: left; ">Generated from <a href="/tools/pyht/">PyHt</a> script <a href="<?python urlname ?>?showcode=1"><?python urlname ?></a></td>
      <td style=" font-size: 9pt; font-style: italic; text-align: right; ">Latest update: <?python filedate() ?> - <script type="text/javascript" language="JavaScript1.1">; showAddr("henrik", "levkowetz.com"); </script></td>
    </tr>
  </table>
  <?python
    if uploadmsg or info: out("<script type='text/javascript' language='JavaScript1.1'>alert(\"%s\");</script>" % (uploadmsg+". "+info).replace('"','\\"'))
  ?>
</div>
</body>
</html>
